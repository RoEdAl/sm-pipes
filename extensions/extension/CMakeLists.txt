#
# extension
#

FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/google-chrome)
FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/mozilla)

FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/install-manifest.cmake
	"CONFIGURE_FILE(manifest-\${BROWSER}.json \${BINARY_DIR}/\${BROWSER}/manifest.json @ONLY)"
)

# specify files to compile here
SET(JS_FILES
	background.js
	content-script.js
)

FUNCTION(CREATE_BABEL_TARGET TNAME BROWSER)
	SET(JS_FILES_DEPENDENCIES)

	# manifest
	ADD_CUSTOM_COMMAND(
		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${BROWSER}/manifest.json
		COMMAND ${CMAKE_COMMAND}
			-DBROWSER=${BROWSER}
			-DBINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}
			-DPROJECT_VERSION_STR_NO_PLATFORM=${PROJECT_VERSION_STR_NO_PLATFORM}
			-P ${CMAKE_CURRENT_BINARY_DIR}/install-manifest.cmake
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
		MAIN_DEPENDENCY manifest-${BROWSER}.json
	)
	LIST(APPEND JS_FILES_DEPENDENCIES ${CMAKE_CURRENT_BINARY_DIR}/${BROWSER}/manifest.json)

	# JS files
	FOREACH(JS_FILE ${ARGN})
		ADD_CUSTOM_COMMAND(
			OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${BROWSER}/${JS_FILE}
			COMMAND ${CMD_NPX} babel 
				--no-babelrc
				${CMAKE_CURRENT_SOURCE_DIR}/${JS_FILE}
				--out-file ${CMAKE_CURRENT_BINARY_DIR}/${BROWSER}/${JS_FILE}
				--presets=${BABEL_PACKAGE}/babel-preset-$<CONFIG>.js,${BABEL_PACKAGE}/babel-preset-${BROWSER}.js
			WORKING_DIRECTORY ${BABEL_PACKAGE}
			MAIN_DEPENDENCY ${JS_FILE}
			DEPENDS babel-package
		)
		LIST(APPEND JS_FILES_DEPENDENCIES ${CMAKE_CURRENT_BINARY_DIR}/${BROWSER}/${JS_FILE})
	ENDFOREACH(JS_FILE)

	ADD_CUSTOM_TARGET(
		${TNAME} ALL
		SOURCES 
			manifest-${BROWSER}.json
			${ARGN}
		DEPENDS 
			babel-package
			${JS_FILES_DEPENDENCIES}
	)

	SET_TARGET_PROPERTIES(
		${TNAME}
		PROPERTIES
		FOLDER "Extension"
	)

	INSTALL(
		FILES ${JS_FILES_DEPENDENCIES}
		DESTINATION extensions/${BROWSER}
	)
ENDFUNCTION(CREATE_BABEL_TARGET)

CREATE_BABEL_TARGET(extension-mozilla mozilla ${JS_FILES})
CREATE_BABEL_TARGET(extension-google-chrome google-chrome ${JS_FILES})
